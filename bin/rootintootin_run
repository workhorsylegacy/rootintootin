#!/usr/bin/env python2.6
# -*- coding: UTF-8 -*-
#-------------------------------------------------------------------------------
#
#    This file is part of the Rootin Tootin web framework and licensed under the
#    GPL version 3 or greater. See the COPYRIGHT file for copyright information.
#    This project is hosted at http://rootin.toot.in .
#
#-------------------------------------------------------------------------------

import os, sys, shutil, signal, subprocess
import threading, time
import errno
import functools
import commands
import json
from lib_rootintootin import *


# Make sure the first arg is a path
if len(sys.argv) < 3:
	print "usage: ./rootintootin_run 'working directory' [server|application|all] [development|production]"
	exit(1)
elif not os.path.exists(sys.argv[1]):
	print "The path '" + sys.argv[1] + "' does not exist. Exiting ..."
	exit(1)
elif sys.argv[2] == "server":
	if len(sys.argv) < 4 or not sys.argv[3] in ['development', 'production']:
		print "./run [development|production]"
		exit(1)

# Move the path to the location of the current file
os.chdir(os.sys.path[0])


# Get all the variables needed for building
pwd = sys.argv[1]
build_type = sys.argv[2]
mode = sys.argv[3]
rootintootin_dir = os.path.expanduser('~/.rootintootin')
project_name = pwd.split('/')[-1]
scratch = rootintootin_dir + '/' + project_name + '/scratch/'
tango = "-I /usr/include/d/ldc/ -L /usr/lib/d/libtango-user-ldc.a"
exec_file("lib_rootintootin_scripts.py", globals(), locals())

# Build the server
if mode == "development" and build_type == 'server':
	copy_files_to_scratch()
	move_to_scratch()
	load_configurations()
	build_framework()
	build_server()
	run_server()
# Or build the application
elif mode == "development" and build_type == 'application':
	copy_changed_files_to_scratch()
	move_to_scratch()
	load_configurations()
	generate_application_files()
	build_application()
# Or build both
elif mode == "production":
	copy_files_to_scratch()
	move_to_scratch()
	load_configurations()
	generate_application_files()
	build_framework()
	build_server()
	build_application()
	run_server()




