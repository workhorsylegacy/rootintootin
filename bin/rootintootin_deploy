#!/usr/bin/env python2.6
# -*- coding: UTF-8 -*-
#-------------------------------------------------------------------------------
#
#	This file is part of the Rootin Tootin web framework and licensed under the
#	GPL version 3 or greater. See the COPYRIGHT file for copyright information.
#	This project is hosted at http://rootin.toot.in .
#
#-------------------------------------------------------------------------------

import os, sys
import json
import pexpect
import getpass
from lib_rootintootin import *


# Move the path to the location of the current file
os.chdir(os.sys.path[0])


# Get the args
pwd = sys.argv[1]
build_type = 'all'
mode = 'production'
rootintootin_dir = os.path.expanduser('~/.rootintootin')
project_name = pwd.split('/')[-1]
scratch = rootintootin_dir + '/' + project_name + '/scratch/'
tango = "-I /usr/include/d/ldc/ -L /usr/lib/d/libtango-user-ldc.a"
exec_file("lib_rootintootin_scripts.py", globals(), locals())

# Copy the files
copy_files_to_scratch()
move_to_scratch()
load_configurations()

# Get the configuration
ip = config['production']['server']['ip']
directory = config['production']['server']['directory']
httpd = config['production']['server']['httpd']
user = config['production']['server']['user']
httpd = config['production']['server']['httpd']
port = config['production']['server']['port']

if directory.startswith("~/"):
	directory = os.path.expanduser(directory)

#if httpd != "lighttpd":
#	print "Can only deploy to lighttpd for now. Exiting ..."
#	exit()

# Read the password from stdin
password = getpass.getpass(user + "@" + ip + "'s password: ")

# FIXME: Move this into each project. That way users can customize 
# it for their project.

# Build everything
generate_application_files()
build_framework()
build_server()
build_application()

# Make ~/fastcgi empty and accessable by the user
remove_folder_on_server('~/fastcgi')
create_folder_on_server('~/fastcgi')
chown_folder_on_server('~/fastcgi', user)

# Copy the files to the server
copy_files_to_server('public')
copy_files_to_server('config')
copy_files_to_server('uploads')
copy_files_to_server('application')

# Make the ~/fastcgi folder belong to thw www-data user
chown_folder_on_server('~/fastcgi', 'www-data')

# Restart the server
restart_remote_server()
print httpd + " running in production mode on http://localhost:" + port



